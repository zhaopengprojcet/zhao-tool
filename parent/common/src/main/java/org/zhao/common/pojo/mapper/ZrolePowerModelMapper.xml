<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zhao.common.pojo.dao.ZrolePowerModelMapper" >
	<resultMap id="BaseResultMap" type="org.zhao.common.pojo.model.ZrolePowerModel" >
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="power_id" property="powerId" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="VARCHAR" />
		<result column="power_type" property="powerType" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,power_id,role_id,power_type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from R_ROLE_POWER
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from R_ROLE_POWER
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.zhao.common.pojo.model.ZrolePowerModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_ROLE_POWER (id,power_id,role_id,power_type)
		values (
			#{record.id,jdbcType=VARCHAR},
			#{record.powerId,jdbcType=VARCHAR},
			#{record.roleId,jdbcType=VARCHAR},
			#{record.powerType,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.zhao.common.pojo.model.ZrolePowerModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_ROLE_POWER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				id,
			</if>
			<if test="record.powerId != null and record.powerId != '' ">
				power_id,
			</if>
			<if test="record.roleId != null and record.roleId != '' ">
				role_id,
			</if>
			<if test="record.powerType != null and record.powerType != '' ">
				power_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				#{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.powerId != null and record.powerId != '' ">
				#{record.powerId,jdbcType=VARCHAR},
			</if>
			<if test="record.roleId != null and record.roleId != '' ">
				#{record.roleId,jdbcType=VARCHAR},
			</if>
			<if test="record.powerType != null and record.powerType != '' ">
				#{record.powerType,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.zhao.common.pojo.model.ZrolePowerModel">
		update R_ROLE_POWER
		<set>
			<if test="record.powerId != null and record.powerId != '' ">
				power_id = #{record.powerId,jdbcType=VARCHAR},
			</if>
			<if test="record.roleId != null and record.roleId != '' ">
				role_id = #{record.roleId,jdbcType=VARCHAR},
			</if>
			<if test="record.powerType != null and record.powerType != '' ">
				power_type = #{record.powerType,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.zhao.common.pojo.model.ZrolePowerModel">
		update R_ROLE_POWER
		set
		power_id = #{record.powerId,jdbcType=VARCHAR}
		role_id = #{record.roleId,jdbcType=VARCHAR}
		power_type = #{record.powerType,jdbcType=VARCHAR}
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<select id="selectPageListByParameters" resultMap="BaseResultMap">
		select * from R_ROLE_POWER where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.powerId != null and record.powerId != '' ">
			and power_id = #{record.powerId,jdbcType=VARCHAR}
		</if>
		<if test="record.roleId != null and record.roleId != '' ">
			and role_id = #{record.roleId,jdbcType=VARCHAR}
		</if>
		<if test="record.powerType != null and record.powerType != '' ">
			and power_type = #{record.powerType,jdbcType=VARCHAR}
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParametersCount" parameterType="org.zhao.common.pojo.model.ZrolePowerModel" resultType="java.lang.Integer">
		select count(*) from R_ROLE_POWER where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.powerId != null and record.powerId != '' ">
			and power_id = #{record.powerId,jdbcType=VARCHAR}
		</if>
		<if test="record.roleId != null and record.roleId != '' ">
			and role_id = #{record.roleId,jdbcType=VARCHAR}
		</if>
		<if test="record.powerType != null and record.powerType != '' ">
			and power_type = #{record.powerType,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectPageListByParameterRequire" resultMap="BaseResultMap">
		select * from R_ROLE_POWER where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.powerId != null">
			<if test="require.powerId.greaterThan != null">
					and power_id > #{require.powerId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.lessThan != null">
					and power_id &lt; #{require.powerId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.greaterThanAndEquals != null">
					and power_id >= #{require.powerId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.lessThanAndEquals != null">
					and power_id &lt;= #{require.powerId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.notEquality != null">
					and power_id &lt;> #{require.powerId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.equality != null">
					and power_id = #{require.powerId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.similar != null">
					and INSTR(power_id, #{require.powerId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.roleId != null">
			<if test="require.roleId.greaterThan != null">
					and role_id > #{require.roleId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.lessThan != null">
					and role_id &lt; #{require.roleId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.greaterThanAndEquals != null">
					and role_id >= #{require.roleId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.lessThanAndEquals != null">
					and role_id &lt;= #{require.roleId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.notEquality != null">
					and role_id &lt;> #{require.roleId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.equality != null">
					and role_id = #{require.roleId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.similar != null">
					and INSTR(role_id, #{require.roleId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.powerType != null">
			<if test="require.powerType.greaterThan != null">
					and power_type > #{require.powerType.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.lessThan != null">
					and power_type &lt; #{require.powerType.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.greaterThanAndEquals != null">
					and power_type >= #{require.powerType.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.lessThanAndEquals != null">
					and power_type &lt;= #{require.powerType.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.notEquality != null">
					and power_type &lt;> #{require.powerType.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.equality != null">
					and power_type = #{require.powerType.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.similar != null">
					and INSTR(power_type, #{require.powerType.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParameterRequireCount" parameterType="org.zhao.common.pojo.model.ZrolePowerModel" resultType="java.lang.Integer">
		select count(*) from R_ROLE_POWER where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.powerId != null">
			<if test="require.powerId.greaterThan != null">
					and power_id > #{require.powerId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.lessThan != null">
					and power_id &lt; #{require.powerId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.greaterThanAndEquals != null">
					and power_id >= #{require.powerId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.lessThanAndEquals != null">
					and power_id &lt;= #{require.powerId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.notEquality != null">
					and power_id &lt;> #{require.powerId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.equality != null">
					and power_id = #{require.powerId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerId.similar != null">
					and INSTR(power_id, #{require.powerId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.roleId != null">
			<if test="require.roleId.greaterThan != null">
					and role_id > #{require.roleId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.lessThan != null">
					and role_id &lt; #{require.roleId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.greaterThanAndEquals != null">
					and role_id >= #{require.roleId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.lessThanAndEquals != null">
					and role_id &lt;= #{require.roleId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.notEquality != null">
					and role_id &lt;> #{require.roleId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.equality != null">
					and role_id = #{require.roleId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.roleId.similar != null">
					and INSTR(role_id, #{require.roleId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.powerType != null">
			<if test="require.powerType.greaterThan != null">
					and power_type > #{require.powerType.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.lessThan != null">
					and power_type &lt; #{require.powerType.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.greaterThanAndEquals != null">
					and power_type >= #{require.powerType.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.lessThanAndEquals != null">
					and power_type &lt;= #{require.powerType.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.notEquality != null">
					and power_type &lt;> #{require.powerType.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.equality != null">
					and power_type = #{require.powerType.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerType.similar != null">
					and INSTR(power_type, #{require.powerType.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
	</select>
	<insert id="batchCreate" parameterType="java.util.List">
		insert into R_ROLE_POWER (
		id,power_id,role_id,power_type
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.powerId,jdbcType=VARCHAR},
			#{item.roleId,jdbcType=VARCHAR},
			#{item.powerType,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteByParames" parameterType="org.zhao.common.pojo.model.ZrolePowerModel">
		delete from R_ROLE_POWER where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.powerId != null and record.powerId != '' ">
			and power_id = #{record.powerId,jdbcType=VARCHAR}
		</if>
		<if test="record.roleId != null and record.roleId != '' ">
			and role_id = #{record.roleId,jdbcType=VARCHAR}
		</if>
		<if test="record.powerType != null and record.powerType != '' ">
			and power_type = #{record.powerType,jdbcType=VARCHAR}
		</if>
	</delete>
</mapper>