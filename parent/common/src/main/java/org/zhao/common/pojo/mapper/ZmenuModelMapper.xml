<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zhao.common.pojo.dao.ZmenuModelMapper" >
	<resultMap id="BaseResultMap" type="org.zhao.common.pojo.model.ZmenuModel" >
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="parent_menu_id" property="parentMenuId" jdbcType="VARCHAR" />
		<result column="menu_state" property="menuState" jdbcType="VARCHAR" />
		<result column="power_key" property="powerKey" jdbcType="VARCHAR" />
		<result column="list_inner" property="listInner" jdbcType="VARCHAR" />
		<result column="menu_name" property="menuName" jdbcType="VARCHAR" />
		<result column="orders" property="orders" jdbcType="VARCHAR" />
		<result column="menu_herf" property="menuHerf" jdbcType="VARCHAR" />
		<result column="list_type" property="listType" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,parent_menu_id,menu_state,power_key,list_inner,menu_name,orders,menu_herf,list_type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from R_MENU
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from R_MENU
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.zhao.common.pojo.model.ZmenuModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU (id,parent_menu_id,menu_state,power_key,list_inner,menu_name,orders,menu_herf,list_type)
		values (
			#{record.id,jdbcType=VARCHAR},
			#{record.parentMenuId,jdbcType=VARCHAR},
			#{record.menuState,jdbcType=VARCHAR},
			#{record.powerKey,jdbcType=VARCHAR},
			#{record.listInner,jdbcType=VARCHAR},
			#{record.menuName,jdbcType=VARCHAR},
			#{record.orders,jdbcType=VARCHAR},
			#{record.menuHerf,jdbcType=VARCHAR},
			#{record.listType,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.zhao.common.pojo.model.ZmenuModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				id,
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id,
			</if>
			<if test="record.menuState != null and record.menuState != '' ">
				menu_state,
			</if>
			<if test="record.powerKey != null and record.powerKey != '' ">
				power_key,
			</if>
			<if test="record.listInner != null and record.listInner != '' ">
				list_inner,
			</if>
			<if test="record.menuName != null and record.menuName != '' ">
				menu_name,
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders,
			</if>
			<if test="record.menuHerf != null and record.menuHerf != '' ">
				menu_herf,
			</if>
			<if test="record.listType != null and record.listType != '' ">
				list_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				#{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				#{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.menuState != null and record.menuState != '' ">
				#{record.menuState,jdbcType=VARCHAR},
			</if>
			<if test="record.powerKey != null and record.powerKey != '' ">
				#{record.powerKey,jdbcType=VARCHAR},
			</if>
			<if test="record.listInner != null and record.listInner != '' ">
				#{record.listInner,jdbcType=VARCHAR},
			</if>
			<if test="record.menuName != null and record.menuName != '' ">
				#{record.menuName,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				#{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.menuHerf != null and record.menuHerf != '' ">
				#{record.menuHerf,jdbcType=VARCHAR},
			</if>
			<if test="record.listType != null and record.listType != '' ">
				#{record.listType,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.zhao.common.pojo.model.ZmenuModel">
		update R_MENU
		<set>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.menuState != null and record.menuState != '' ">
				menu_state = #{record.menuState,jdbcType=VARCHAR},
			</if>
			<if test="record.powerKey != null and record.powerKey != '' ">
				power_key = #{record.powerKey,jdbcType=VARCHAR},
			</if>
			<if test="record.listInner != null and record.listInner != '' ">
				list_inner = #{record.listInner,jdbcType=VARCHAR},
			</if>
			<if test="record.menuName != null and record.menuName != '' ">
				menu_name = #{record.menuName,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders = #{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.menuHerf != null and record.menuHerf != '' ">
				menu_herf = #{record.menuHerf,jdbcType=VARCHAR},
			</if>
			<if test="record.listType != null and record.listType != '' ">
				list_type = #{record.listType,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.zhao.common.pojo.model.ZmenuModel">
		update R_MENU
		set
		parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		menu_state = #{record.menuState,jdbcType=VARCHAR}
		power_key = #{record.powerKey,jdbcType=VARCHAR}
		list_inner = #{record.listInner,jdbcType=VARCHAR}
		menu_name = #{record.menuName,jdbcType=VARCHAR}
		orders = #{record.orders,jdbcType=VARCHAR}
		menu_herf = #{record.menuHerf,jdbcType=VARCHAR}
		list_type = #{record.listType,jdbcType=VARCHAR}
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<select id="selectPageListByParameters" resultMap="BaseResultMap">
		select * from R_MENU where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.menuState != null and record.menuState != '' ">
			and menu_state = #{record.menuState,jdbcType=VARCHAR}
		</if>
		<if test="record.powerKey != null and record.powerKey != '' ">
			and power_key = #{record.powerKey,jdbcType=VARCHAR}
		</if>
		<if test="record.listInner != null and record.listInner != '' ">
			and list_inner = #{record.listInner,jdbcType=VARCHAR}
		</if>
		<if test="record.menuName != null and record.menuName != '' ">
			and menu_name = #{record.menuName,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.menuHerf != null and record.menuHerf != '' ">
			and menu_herf = #{record.menuHerf,jdbcType=VARCHAR}
		</if>
		<if test="record.listType != null and record.listType != '' ">
			and list_type = #{record.listType,jdbcType=VARCHAR}
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParametersCount" parameterType="org.zhao.common.pojo.model.ZmenuModel" resultType="java.lang.Integer">
		select count(*) from R_MENU where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.menuState != null and record.menuState != '' ">
			and menu_state = #{record.menuState,jdbcType=VARCHAR}
		</if>
		<if test="record.powerKey != null and record.powerKey != '' ">
			and power_key = #{record.powerKey,jdbcType=VARCHAR}
		</if>
		<if test="record.listInner != null and record.listInner != '' ">
			and list_inner = #{record.listInner,jdbcType=VARCHAR}
		</if>
		<if test="record.menuName != null and record.menuName != '' ">
			and menu_name = #{record.menuName,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.menuHerf != null and record.menuHerf != '' ">
			and menu_herf = #{record.menuHerf,jdbcType=VARCHAR}
		</if>
		<if test="record.listType != null and record.listType != '' ">
			and list_type = #{record.listType,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectPageListByParameterRequire" resultMap="BaseResultMap">
		select * from R_MENU where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.parentMenuId != null">
			<if test="require.parentMenuId.greaterThan != null">
					and parent_menu_id > #{require.parentMenuId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThan != null">
					and parent_menu_id &lt; #{require.parentMenuId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.greaterThanAndEquals != null">
					and parent_menu_id >= #{require.parentMenuId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThanAndEquals != null">
					and parent_menu_id &lt;= #{require.parentMenuId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.notEquality != null">
					and parent_menu_id &lt;> #{require.parentMenuId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.equality != null">
					and parent_menu_id = #{require.parentMenuId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.similar != null">
					and INSTR(parent_menu_id, #{require.parentMenuId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.menuState != null">
			<if test="require.menuState.greaterThan != null">
					and menu_state > #{require.menuState.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.lessThan != null">
					and menu_state &lt; #{require.menuState.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.greaterThanAndEquals != null">
					and menu_state >= #{require.menuState.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.lessThanAndEquals != null">
					and menu_state &lt;= #{require.menuState.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.notEquality != null">
					and menu_state &lt;> #{require.menuState.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.equality != null">
					and menu_state = #{require.menuState.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.similar != null">
					and INSTR(menu_state, #{require.menuState.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.powerKey != null">
			<if test="require.powerKey.greaterThan != null">
					and power_key > #{require.powerKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.lessThan != null">
					and power_key &lt; #{require.powerKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.greaterThanAndEquals != null">
					and power_key >= #{require.powerKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.lessThanAndEquals != null">
					and power_key &lt;= #{require.powerKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.notEquality != null">
					and power_key &lt;> #{require.powerKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.equality != null">
					and power_key = #{require.powerKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.similar != null">
					and INSTR(power_key, #{require.powerKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.listInner != null">
			<if test="require.listInner.greaterThan != null">
					and list_inner > #{require.listInner.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.lessThan != null">
					and list_inner &lt; #{require.listInner.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.greaterThanAndEquals != null">
					and list_inner >= #{require.listInner.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.lessThanAndEquals != null">
					and list_inner &lt;= #{require.listInner.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.notEquality != null">
					and list_inner &lt;> #{require.listInner.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.equality != null">
					and list_inner = #{require.listInner.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.similar != null">
					and INSTR(list_inner, #{require.listInner.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.menuName != null">
			<if test="require.menuName.greaterThan != null">
					and menu_name > #{require.menuName.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.lessThan != null">
					and menu_name &lt; #{require.menuName.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.greaterThanAndEquals != null">
					and menu_name >= #{require.menuName.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.lessThanAndEquals != null">
					and menu_name &lt;= #{require.menuName.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.notEquality != null">
					and menu_name &lt;> #{require.menuName.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.equality != null">
					and menu_name = #{require.menuName.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.similar != null">
					and INSTR(menu_name, #{require.menuName.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.orders != null">
			<if test="require.orders.greaterThan != null">
					and orders > #{require.orders.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThan != null">
					and orders &lt; #{require.orders.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.greaterThanAndEquals != null">
					and orders >= #{require.orders.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThanAndEquals != null">
					and orders &lt;= #{require.orders.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.notEquality != null">
					and orders &lt;> #{require.orders.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.equality != null">
					and orders = #{require.orders.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.similar != null">
					and INSTR(orders, #{require.orders.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.menuHerf != null">
			<if test="require.menuHerf.greaterThan != null">
					and menu_herf > #{require.menuHerf.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.lessThan != null">
					and menu_herf &lt; #{require.menuHerf.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.greaterThanAndEquals != null">
					and menu_herf >= #{require.menuHerf.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.lessThanAndEquals != null">
					and menu_herf &lt;= #{require.menuHerf.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.notEquality != null">
					and menu_herf &lt;> #{require.menuHerf.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.equality != null">
					and menu_herf = #{require.menuHerf.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.similar != null">
					and INSTR(menu_herf, #{require.menuHerf.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.listType != null">
			<if test="require.listType.greaterThan != null">
					and list_type > #{require.listType.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.lessThan != null">
					and list_type &lt; #{require.listType.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.greaterThanAndEquals != null">
					and list_type >= #{require.listType.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.lessThanAndEquals != null">
					and list_type &lt;= #{require.listType.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.notEquality != null">
					and list_type &lt;> #{require.listType.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.equality != null">
					and list_type = #{require.listType.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.similar != null">
					and INSTR(list_type, #{require.listType.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParameterRequireCount" parameterType="org.zhao.common.pojo.model.ZmenuModel" resultType="java.lang.Integer">
		select count(*) from R_MENU where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.parentMenuId != null">
			<if test="require.parentMenuId.greaterThan != null">
					and parent_menu_id > #{require.parentMenuId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThan != null">
					and parent_menu_id &lt; #{require.parentMenuId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.greaterThanAndEquals != null">
					and parent_menu_id >= #{require.parentMenuId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThanAndEquals != null">
					and parent_menu_id &lt;= #{require.parentMenuId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.notEquality != null">
					and parent_menu_id &lt;> #{require.parentMenuId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.equality != null">
					and parent_menu_id = #{require.parentMenuId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.similar != null">
					and INSTR(parent_menu_id, #{require.parentMenuId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.menuState != null">
			<if test="require.menuState.greaterThan != null">
					and menu_state > #{require.menuState.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.lessThan != null">
					and menu_state &lt; #{require.menuState.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.greaterThanAndEquals != null">
					and menu_state >= #{require.menuState.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.lessThanAndEquals != null">
					and menu_state &lt;= #{require.menuState.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.notEquality != null">
					and menu_state &lt;> #{require.menuState.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.equality != null">
					and menu_state = #{require.menuState.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuState.similar != null">
					and INSTR(menu_state, #{require.menuState.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.powerKey != null">
			<if test="require.powerKey.greaterThan != null">
					and power_key > #{require.powerKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.lessThan != null">
					and power_key &lt; #{require.powerKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.greaterThanAndEquals != null">
					and power_key >= #{require.powerKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.lessThanAndEquals != null">
					and power_key &lt;= #{require.powerKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.notEquality != null">
					and power_key &lt;> #{require.powerKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.equality != null">
					and power_key = #{require.powerKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.powerKey.similar != null">
					and INSTR(power_key, #{require.powerKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.listInner != null">
			<if test="require.listInner.greaterThan != null">
					and list_inner > #{require.listInner.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.lessThan != null">
					and list_inner &lt; #{require.listInner.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.greaterThanAndEquals != null">
					and list_inner >= #{require.listInner.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.lessThanAndEquals != null">
					and list_inner &lt;= #{require.listInner.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.notEquality != null">
					and list_inner &lt;> #{require.listInner.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.equality != null">
					and list_inner = #{require.listInner.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listInner.similar != null">
					and INSTR(list_inner, #{require.listInner.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.menuName != null">
			<if test="require.menuName.greaterThan != null">
					and menu_name > #{require.menuName.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.lessThan != null">
					and menu_name &lt; #{require.menuName.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.greaterThanAndEquals != null">
					and menu_name >= #{require.menuName.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.lessThanAndEquals != null">
					and menu_name &lt;= #{require.menuName.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.notEquality != null">
					and menu_name &lt;> #{require.menuName.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.equality != null">
					and menu_name = #{require.menuName.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuName.similar != null">
					and INSTR(menu_name, #{require.menuName.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.orders != null">
			<if test="require.orders.greaterThan != null">
					and orders > #{require.orders.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThan != null">
					and orders &lt; #{require.orders.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.greaterThanAndEquals != null">
					and orders >= #{require.orders.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThanAndEquals != null">
					and orders &lt;= #{require.orders.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.notEquality != null">
					and orders &lt;> #{require.orders.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.equality != null">
					and orders = #{require.orders.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.similar != null">
					and INSTR(orders, #{require.orders.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.menuHerf != null">
			<if test="require.menuHerf.greaterThan != null">
					and menu_herf > #{require.menuHerf.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.lessThan != null">
					and menu_herf &lt; #{require.menuHerf.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.greaterThanAndEquals != null">
					and menu_herf >= #{require.menuHerf.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.lessThanAndEquals != null">
					and menu_herf &lt;= #{require.menuHerf.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.notEquality != null">
					and menu_herf &lt;> #{require.menuHerf.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.equality != null">
					and menu_herf = #{require.menuHerf.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.menuHerf.similar != null">
					and INSTR(menu_herf, #{require.menuHerf.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.listType != null">
			<if test="require.listType.greaterThan != null">
					and list_type > #{require.listType.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.lessThan != null">
					and list_type &lt; #{require.listType.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.greaterThanAndEquals != null">
					and list_type >= #{require.listType.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.lessThanAndEquals != null">
					and list_type &lt;= #{require.listType.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.notEquality != null">
					and list_type &lt;> #{require.listType.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.equality != null">
					and list_type = #{require.listType.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.listType.similar != null">
					and INSTR(list_type, #{require.listType.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
	</select>
	<insert id="batchCreate" parameterType="java.util.List">
		insert into R_MENU (
		id,parent_menu_id,menu_state,power_key,list_inner,menu_name,orders,menu_herf,list_type
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.parentMenuId,jdbcType=VARCHAR},
			#{item.menuState,jdbcType=VARCHAR},
			#{item.powerKey,jdbcType=VARCHAR},
			#{item.listInner,jdbcType=VARCHAR},
			#{item.menuName,jdbcType=VARCHAR},
			#{item.orders,jdbcType=VARCHAR},
			#{item.menuHerf,jdbcType=VARCHAR},
			#{item.listType,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteByParames" parameterType="org.zhao.common.pojo.model.ZmenuModel">
		delete from R_MENU where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.menuState != null and record.menuState != '' ">
			and menu_state = #{record.menuState,jdbcType=VARCHAR}
		</if>
		<if test="record.powerKey != null and record.powerKey != '' ">
			and power_key = #{record.powerKey,jdbcType=VARCHAR}
		</if>
		<if test="record.listInner != null and record.listInner != '' ">
			and list_inner = #{record.listInner,jdbcType=VARCHAR}
		</if>
		<if test="record.menuName != null and record.menuName != '' ">
			and menu_name = #{record.menuName,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.menuHerf != null and record.menuHerf != '' ">
			and menu_herf = #{record.menuHerf,jdbcType=VARCHAR}
		</if>
		<if test="record.listType != null and record.listType != '' ">
			and list_type = #{record.listType,jdbcType=VARCHAR}
		</if>
	</delete>
</mapper>