<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zhao.common.pojo.dao.ZkeyValueModelMapper" >
	<resultMap id="BaseResultMap" type="org.zhao.common.pojo.model.ZkeyValueModel" >
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="server_key" property="serverKey" jdbcType="VARCHAR" />
		<result column="server_value" property="serverValue" jdbcType="VARCHAR" />
		<result column="serverey_desc" property="servereyDesc" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,server_key,server_value,serverey_desc
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from R_KEY_VALUE
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from R_KEY_VALUE
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.zhao.common.pojo.model.ZkeyValueModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_KEY_VALUE (id,server_key,server_value,serverey_desc)
		values (
			#{record.id,jdbcType=VARCHAR},
			#{record.serverKey,jdbcType=VARCHAR},
			#{record.serverValue,jdbcType=VARCHAR},
			#{record.servereyDesc,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.zhao.common.pojo.model.ZkeyValueModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_KEY_VALUE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				id,
			</if>
			<if test="record.serverKey != null and record.serverKey != '' ">
				server_key,
			</if>
			<if test="record.serverValue != null and record.serverValue != '' ">
				server_value,
			</if>
			<if test="record.servereyDesc != null and record.servereyDesc != '' ">
				serverey_desc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				#{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.serverKey != null and record.serverKey != '' ">
				#{record.serverKey,jdbcType=VARCHAR},
			</if>
			<if test="record.serverValue != null and record.serverValue != '' ">
				#{record.serverValue,jdbcType=VARCHAR},
			</if>
			<if test="record.servereyDesc != null and record.servereyDesc != '' ">
				#{record.servereyDesc,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.zhao.common.pojo.model.ZkeyValueModel">
		update R_KEY_VALUE
		<set>
			<if test="record.serverKey != null and record.serverKey != '' ">
				server_key = #{record.serverKey,jdbcType=VARCHAR},
			</if>
			<if test="record.serverValue != null and record.serverValue != '' ">
				server_value = #{record.serverValue,jdbcType=VARCHAR},
			</if>
			<if test="record.servereyDesc != null and record.servereyDesc != '' ">
				serverey_desc = #{record.servereyDesc,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.zhao.common.pojo.model.ZkeyValueModel">
		update R_KEY_VALUE
		set
		server_key = #{record.serverKey,jdbcType=VARCHAR}
		server_value = #{record.serverValue,jdbcType=VARCHAR}
		serverey_desc = #{record.servereyDesc,jdbcType=VARCHAR}
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<select id="selectPageListByParameters" resultMap="BaseResultMap">
		select * from R_KEY_VALUE where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.serverKey != null and record.serverKey != '' ">
			and server_key = #{record.serverKey,jdbcType=VARCHAR}
		</if>
		<if test="record.serverValue != null and record.serverValue != '' ">
			and server_value = #{record.serverValue,jdbcType=VARCHAR}
		</if>
		<if test="record.servereyDesc != null and record.servereyDesc != '' ">
			and serverey_desc = #{record.servereyDesc,jdbcType=VARCHAR}
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParametersCount" parameterType="org.zhao.common.pojo.model.ZkeyValueModel" resultType="java.lang.Integer">
		select count(*) from R_KEY_VALUE where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.serverKey != null and record.serverKey != '' ">
			and server_key = #{record.serverKey,jdbcType=VARCHAR}
		</if>
		<if test="record.serverValue != null and record.serverValue != '' ">
			and server_value = #{record.serverValue,jdbcType=VARCHAR}
		</if>
		<if test="record.servereyDesc != null and record.servereyDesc != '' ">
			and serverey_desc = #{record.servereyDesc,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectPageListByParameterRequire" resultMap="BaseResultMap">
		select * from R_KEY_VALUE where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.serverKey != null">
			<if test="require.serverKey.greaterThan != null">
					and server_key > #{require.serverKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.lessThan != null">
					and server_key &lt; #{require.serverKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.greaterThanAndEquals != null">
					and server_key >= #{require.serverKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.lessThanAndEquals != null">
					and server_key &lt;= #{require.serverKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.notEquality != null">
					and server_key &lt;> #{require.serverKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.equality != null">
					and server_key = #{require.serverKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.similar != null">
					and INSTR(server_key, #{require.serverKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.serverValue != null">
			<if test="require.serverValue.greaterThan != null">
					and server_value > #{require.serverValue.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.lessThan != null">
					and server_value &lt; #{require.serverValue.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.greaterThanAndEquals != null">
					and server_value >= #{require.serverValue.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.lessThanAndEquals != null">
					and server_value &lt;= #{require.serverValue.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.notEquality != null">
					and server_value &lt;> #{require.serverValue.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.equality != null">
					and server_value = #{require.serverValue.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.similar != null">
					and INSTR(server_value, #{require.serverValue.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.servereyDesc != null">
			<if test="require.servereyDesc.greaterThan != null">
					and serverey_desc > #{require.servereyDesc.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.lessThan != null">
					and serverey_desc &lt; #{require.servereyDesc.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.greaterThanAndEquals != null">
					and serverey_desc >= #{require.servereyDesc.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.lessThanAndEquals != null">
					and serverey_desc &lt;= #{require.servereyDesc.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.notEquality != null">
					and serverey_desc &lt;> #{require.servereyDesc.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.equality != null">
					and serverey_desc = #{require.servereyDesc.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.similar != null">
					and INSTR(serverey_desc, #{require.servereyDesc.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParameterRequireCount" parameterType="org.zhao.common.pojo.model.ZkeyValueModel" resultType="java.lang.Integer">
		select count(*) from R_KEY_VALUE where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.serverKey != null">
			<if test="require.serverKey.greaterThan != null">
					and server_key > #{require.serverKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.lessThan != null">
					and server_key &lt; #{require.serverKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.greaterThanAndEquals != null">
					and server_key >= #{require.serverKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.lessThanAndEquals != null">
					and server_key &lt;= #{require.serverKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.notEquality != null">
					and server_key &lt;> #{require.serverKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.equality != null">
					and server_key = #{require.serverKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverKey.similar != null">
					and INSTR(server_key, #{require.serverKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.serverValue != null">
			<if test="require.serverValue.greaterThan != null">
					and server_value > #{require.serverValue.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.lessThan != null">
					and server_value &lt; #{require.serverValue.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.greaterThanAndEquals != null">
					and server_value >= #{require.serverValue.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.lessThanAndEquals != null">
					and server_value &lt;= #{require.serverValue.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.notEquality != null">
					and server_value &lt;> #{require.serverValue.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.equality != null">
					and server_value = #{require.serverValue.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.serverValue.similar != null">
					and INSTR(server_value, #{require.serverValue.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.servereyDesc != null">
			<if test="require.servereyDesc.greaterThan != null">
					and serverey_desc > #{require.servereyDesc.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.lessThan != null">
					and serverey_desc &lt; #{require.servereyDesc.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.greaterThanAndEquals != null">
					and serverey_desc >= #{require.servereyDesc.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.lessThanAndEquals != null">
					and serverey_desc &lt;= #{require.servereyDesc.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.notEquality != null">
					and serverey_desc &lt;> #{require.servereyDesc.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.equality != null">
					and serverey_desc = #{require.servereyDesc.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.servereyDesc.similar != null">
					and INSTR(serverey_desc, #{require.servereyDesc.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
	</select>
	<insert id="batchCreate" parameterType="java.util.List">
		insert into R_KEY_VALUE (
		id,server_key,server_value,serverey_desc
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.serverKey,jdbcType=VARCHAR},
			#{item.serverValue,jdbcType=VARCHAR},
			#{item.servereyDesc,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteByParames" parameterType="org.zhao.common.pojo.model.ZkeyValueModel">
		delete from R_KEY_VALUE where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.serverKey != null and record.serverKey != '' ">
			and server_key = #{record.serverKey,jdbcType=VARCHAR}
		</if>
		<if test="record.serverValue != null and record.serverValue != '' ">
			and server_value = #{record.serverValue,jdbcType=VARCHAR}
		</if>
		<if test="record.servereyDesc != null and record.servereyDesc != '' ">
			and serverey_desc = #{record.servereyDesc,jdbcType=VARCHAR}
		</if>
	</delete>
</mapper>