<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zhao.common.pojo.dao.ZmenuFieldModelMapper" >
	<resultMap id="BaseResultMap" type="org.zhao.common.pojo.model.ZmenuFieldModel" >
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="formatter" property="formatter" jdbcType="VARCHAR" />
		<result column="field_name" property="fieldName" jdbcType="VARCHAR" />
		<result column="parent_menu_id" property="parentMenuId" jdbcType="VARCHAR" />
		<result column="field_key" property="fieldKey" jdbcType="VARCHAR" />
		<result column="width" property="width" jdbcType="VARCHAR" />
		<result column="orders" property="orders" jdbcType="VARCHAR" />
		<result column="align" property="align" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,formatter,field_name,parent_menu_id,field_key,width,orders,align
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from R_MENU_FIELD
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from R_MENU_FIELD
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.zhao.common.pojo.model.ZmenuFieldModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU_FIELD (id,formatter,field_name,parent_menu_id,field_key,width,orders,align)
		values (
			#{record.id,jdbcType=VARCHAR},
			#{record.formatter,jdbcType=VARCHAR},
			#{record.fieldName,jdbcType=VARCHAR},
			#{record.parentMenuId,jdbcType=VARCHAR},
			#{record.fieldKey,jdbcType=VARCHAR},
			#{record.width,jdbcType=VARCHAR},
			#{record.orders,jdbcType=VARCHAR},
			#{record.align,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.zhao.common.pojo.model.ZmenuFieldModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU_FIELD
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				id,
			</if>
			<if test="record.formatter != null and record.formatter != '' ">
				formatter,
			</if>
			<if test="record.fieldName != null and record.fieldName != '' ">
				field_name,
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id,
			</if>
			<if test="record.fieldKey != null and record.fieldKey != '' ">
				field_key,
			</if>
			<if test="record.width != null and record.width != '' ">
				width,
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders,
			</if>
			<if test="record.align != null and record.align != '' ">
				align,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				#{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.formatter != null and record.formatter != '' ">
				#{record.formatter,jdbcType=VARCHAR},
			</if>
			<if test="record.fieldName != null and record.fieldName != '' ">
				#{record.fieldName,jdbcType=VARCHAR},
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				#{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.fieldKey != null and record.fieldKey != '' ">
				#{record.fieldKey,jdbcType=VARCHAR},
			</if>
			<if test="record.width != null and record.width != '' ">
				#{record.width,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				#{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.align != null and record.align != '' ">
				#{record.align,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.zhao.common.pojo.model.ZmenuFieldModel">
		update R_MENU_FIELD
		<set>
			<if test="record.formatter != null and record.formatter != '' ">
				formatter = #{record.formatter,jdbcType=VARCHAR},
			</if>
			<if test="record.fieldName != null and record.fieldName != '' ">
				field_name = #{record.fieldName,jdbcType=VARCHAR},
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.fieldKey != null and record.fieldKey != '' ">
				field_key = #{record.fieldKey,jdbcType=VARCHAR},
			</if>
			<if test="record.width != null and record.width != '' ">
				width = #{record.width,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders = #{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.align != null and record.align != '' ">
				align = #{record.align,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.zhao.common.pojo.model.ZmenuFieldModel">
		update R_MENU_FIELD
		set
		formatter = #{record.formatter,jdbcType=VARCHAR}
		field_name = #{record.fieldName,jdbcType=VARCHAR}
		parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		field_key = #{record.fieldKey,jdbcType=VARCHAR}
		width = #{record.width,jdbcType=VARCHAR}
		orders = #{record.orders,jdbcType=VARCHAR}
		align = #{record.align,jdbcType=VARCHAR}
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<select id="selectPageListByParameters" resultMap="BaseResultMap">
		select * from R_MENU_FIELD where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.formatter != null and record.formatter != '' ">
			and formatter = #{record.formatter,jdbcType=VARCHAR}
		</if>
		<if test="record.fieldName != null and record.fieldName != '' ">
			and field_name = #{record.fieldName,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.fieldKey != null and record.fieldKey != '' ">
			and field_key = #{record.fieldKey,jdbcType=VARCHAR}
		</if>
		<if test="record.width != null and record.width != '' ">
			and width = #{record.width,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.align != null and record.align != '' ">
			and align = #{record.align,jdbcType=VARCHAR}
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParametersCount" parameterType="org.zhao.common.pojo.model.ZmenuFieldModel" resultType="java.lang.Integer">
		select count(*) from R_MENU_FIELD where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.formatter != null and record.formatter != '' ">
			and formatter = #{record.formatter,jdbcType=VARCHAR}
		</if>
		<if test="record.fieldName != null and record.fieldName != '' ">
			and field_name = #{record.fieldName,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.fieldKey != null and record.fieldKey != '' ">
			and field_key = #{record.fieldKey,jdbcType=VARCHAR}
		</if>
		<if test="record.width != null and record.width != '' ">
			and width = #{record.width,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.align != null and record.align != '' ">
			and align = #{record.align,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectPageListByParameterRequire" resultMap="BaseResultMap">
		select * from R_MENU_FIELD where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.formatter != null">
			<if test="require.formatter.greaterThan != null">
					and formatter > #{require.formatter.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.lessThan != null">
					and formatter &lt; #{require.formatter.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.greaterThanAndEquals != null">
					and formatter >= #{require.formatter.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.lessThanAndEquals != null">
					and formatter &lt;= #{require.formatter.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.notEquality != null">
					and formatter &lt;> #{require.formatter.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.equality != null">
					and formatter = #{require.formatter.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.similar != null">
					and INSTR(formatter, #{require.formatter.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.fieldName != null">
			<if test="require.fieldName.greaterThan != null">
					and field_name > #{require.fieldName.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.lessThan != null">
					and field_name &lt; #{require.fieldName.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.greaterThanAndEquals != null">
					and field_name >= #{require.fieldName.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.lessThanAndEquals != null">
					and field_name &lt;= #{require.fieldName.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.notEquality != null">
					and field_name &lt;> #{require.fieldName.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.equality != null">
					and field_name = #{require.fieldName.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.similar != null">
					and INSTR(field_name, #{require.fieldName.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.parentMenuId != null">
			<if test="require.parentMenuId.greaterThan != null">
					and parent_menu_id > #{require.parentMenuId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThan != null">
					and parent_menu_id &lt; #{require.parentMenuId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.greaterThanAndEquals != null">
					and parent_menu_id >= #{require.parentMenuId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThanAndEquals != null">
					and parent_menu_id &lt;= #{require.parentMenuId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.notEquality != null">
					and parent_menu_id &lt;> #{require.parentMenuId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.equality != null">
					and parent_menu_id = #{require.parentMenuId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.similar != null">
					and INSTR(parent_menu_id, #{require.parentMenuId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.fieldKey != null">
			<if test="require.fieldKey.greaterThan != null">
					and field_key > #{require.fieldKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.lessThan != null">
					and field_key &lt; #{require.fieldKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.greaterThanAndEquals != null">
					and field_key >= #{require.fieldKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.lessThanAndEquals != null">
					and field_key &lt;= #{require.fieldKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.notEquality != null">
					and field_key &lt;> #{require.fieldKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.equality != null">
					and field_key = #{require.fieldKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.similar != null">
					and INSTR(field_key, #{require.fieldKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.width != null">
			<if test="require.width.greaterThan != null">
					and width > #{require.width.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.lessThan != null">
					and width &lt; #{require.width.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.greaterThanAndEquals != null">
					and width >= #{require.width.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.lessThanAndEquals != null">
					and width &lt;= #{require.width.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.notEquality != null">
					and width &lt;> #{require.width.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.equality != null">
					and width = #{require.width.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.similar != null">
					and INSTR(width, #{require.width.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.orders != null">
			<if test="require.orders.greaterThan != null">
					and orders > #{require.orders.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThan != null">
					and orders &lt; #{require.orders.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.greaterThanAndEquals != null">
					and orders >= #{require.orders.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThanAndEquals != null">
					and orders &lt;= #{require.orders.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.notEquality != null">
					and orders &lt;> #{require.orders.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.equality != null">
					and orders = #{require.orders.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.similar != null">
					and INSTR(orders, #{require.orders.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.align != null">
			<if test="require.align.greaterThan != null">
					and align > #{require.align.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.lessThan != null">
					and align &lt; #{require.align.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.greaterThanAndEquals != null">
					and align >= #{require.align.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.lessThanAndEquals != null">
					and align &lt;= #{require.align.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.notEquality != null">
					and align &lt;> #{require.align.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.equality != null">
					and align = #{require.align.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.similar != null">
					and INSTR(align, #{require.align.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParameterRequireCount" parameterType="org.zhao.common.pojo.model.ZmenuFieldModel" resultType="java.lang.Integer">
		select count(*) from R_MENU_FIELD where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.formatter != null">
			<if test="require.formatter.greaterThan != null">
					and formatter > #{require.formatter.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.lessThan != null">
					and formatter &lt; #{require.formatter.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.greaterThanAndEquals != null">
					and formatter >= #{require.formatter.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.lessThanAndEquals != null">
					and formatter &lt;= #{require.formatter.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.notEquality != null">
					and formatter &lt;> #{require.formatter.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.equality != null">
					and formatter = #{require.formatter.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.formatter.similar != null">
					and INSTR(formatter, #{require.formatter.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.fieldName != null">
			<if test="require.fieldName.greaterThan != null">
					and field_name > #{require.fieldName.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.lessThan != null">
					and field_name &lt; #{require.fieldName.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.greaterThanAndEquals != null">
					and field_name >= #{require.fieldName.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.lessThanAndEquals != null">
					and field_name &lt;= #{require.fieldName.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.notEquality != null">
					and field_name &lt;> #{require.fieldName.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.equality != null">
					and field_name = #{require.fieldName.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldName.similar != null">
					and INSTR(field_name, #{require.fieldName.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.parentMenuId != null">
			<if test="require.parentMenuId.greaterThan != null">
					and parent_menu_id > #{require.parentMenuId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThan != null">
					and parent_menu_id &lt; #{require.parentMenuId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.greaterThanAndEquals != null">
					and parent_menu_id >= #{require.parentMenuId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThanAndEquals != null">
					and parent_menu_id &lt;= #{require.parentMenuId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.notEquality != null">
					and parent_menu_id &lt;> #{require.parentMenuId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.equality != null">
					and parent_menu_id = #{require.parentMenuId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.similar != null">
					and INSTR(parent_menu_id, #{require.parentMenuId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.fieldKey != null">
			<if test="require.fieldKey.greaterThan != null">
					and field_key > #{require.fieldKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.lessThan != null">
					and field_key &lt; #{require.fieldKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.greaterThanAndEquals != null">
					and field_key >= #{require.fieldKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.lessThanAndEquals != null">
					and field_key &lt;= #{require.fieldKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.notEquality != null">
					and field_key &lt;> #{require.fieldKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.equality != null">
					and field_key = #{require.fieldKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.fieldKey.similar != null">
					and INSTR(field_key, #{require.fieldKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.width != null">
			<if test="require.width.greaterThan != null">
					and width > #{require.width.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.lessThan != null">
					and width &lt; #{require.width.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.greaterThanAndEquals != null">
					and width >= #{require.width.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.lessThanAndEquals != null">
					and width &lt;= #{require.width.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.notEquality != null">
					and width &lt;> #{require.width.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.equality != null">
					and width = #{require.width.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.width.similar != null">
					and INSTR(width, #{require.width.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.orders != null">
			<if test="require.orders.greaterThan != null">
					and orders > #{require.orders.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThan != null">
					and orders &lt; #{require.orders.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.greaterThanAndEquals != null">
					and orders >= #{require.orders.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThanAndEquals != null">
					and orders &lt;= #{require.orders.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.notEquality != null">
					and orders &lt;> #{require.orders.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.equality != null">
					and orders = #{require.orders.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.similar != null">
					and INSTR(orders, #{require.orders.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.align != null">
			<if test="require.align.greaterThan != null">
					and align > #{require.align.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.lessThan != null">
					and align &lt; #{require.align.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.greaterThanAndEquals != null">
					and align >= #{require.align.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.lessThanAndEquals != null">
					and align &lt;= #{require.align.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.notEquality != null">
					and align &lt;> #{require.align.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.equality != null">
					and align = #{require.align.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.align.similar != null">
					and INSTR(align, #{require.align.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
	</select>
	<insert id="batchCreate" parameterType="java.util.List">
		insert into R_MENU_FIELD (
		id,formatter,field_name,parent_menu_id,field_key,width,orders,align
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.formatter,jdbcType=VARCHAR},
			#{item.fieldName,jdbcType=VARCHAR},
			#{item.parentMenuId,jdbcType=VARCHAR},
			#{item.fieldKey,jdbcType=VARCHAR},
			#{item.width,jdbcType=VARCHAR},
			#{item.orders,jdbcType=VARCHAR},
			#{item.align,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteByParames" parameterType="org.zhao.common.pojo.model.ZmenuFieldModel">
		delete from R_MENU_FIELD where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.formatter != null and record.formatter != '' ">
			and formatter = #{record.formatter,jdbcType=VARCHAR}
		</if>
		<if test="record.fieldName != null and record.fieldName != '' ">
			and field_name = #{record.fieldName,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.fieldKey != null and record.fieldKey != '' ">
			and field_key = #{record.fieldKey,jdbcType=VARCHAR}
		</if>
		<if test="record.width != null and record.width != '' ">
			and width = #{record.width,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.align != null and record.align != '' ">
			and align = #{record.align,jdbcType=VARCHAR}
		</if>
	</delete>
</mapper>