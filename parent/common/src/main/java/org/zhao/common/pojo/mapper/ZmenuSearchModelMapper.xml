<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zhao.common.pojo.dao.ZmenuSearchModelMapper" >
	<resultMap id="BaseResultMap" type="org.zhao.common.pojo.model.ZmenuSearchModel" >
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="load_value" property="loadValue" jdbcType="VARCHAR" />
		<result column="search_text" property="searchText" jdbcType="VARCHAR" />
		<result column="load_value_url" property="loadValueUrl" jdbcType="VARCHAR" />
		<result column="parent_menu_id" property="parentMenuId" jdbcType="VARCHAR" />
		<result column="search_type" property="searchType" jdbcType="VARCHAR" />
		<result column="orders" property="orders" jdbcType="VARCHAR" />
		<result column="search_key" property="searchKey" jdbcType="VARCHAR" />
		<result column="search_state" property="searchState" jdbcType="VARCHAR" />
		<result column="value_field" property="valueField" jdbcType="VARCHAR" />
		<result column="text_field" property="textField" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,load_value,search_text,load_value_url,parent_menu_id,search_type,orders,search_key,search_state,value_field,text_field
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from R_MENU_SEARCH
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from R_MENU_SEARCH
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU_SEARCH (id,load_value,search_text,load_value_url,parent_menu_id,search_type,orders,search_key,search_state,value_field,text_field)
		values (
			#{record.id,jdbcType=VARCHAR},
			#{record.loadValue,jdbcType=VARCHAR},
			#{record.searchText,jdbcType=VARCHAR},
			#{record.loadValueUrl,jdbcType=VARCHAR},
			#{record.parentMenuId,jdbcType=VARCHAR},
			#{record.searchType,jdbcType=VARCHAR},
			#{record.orders,jdbcType=VARCHAR},
			#{record.searchKey,jdbcType=VARCHAR},
			#{record.searchState,jdbcType=VARCHAR},
			#{record.valueField,jdbcType=VARCHAR},
			#{record.textField,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU_SEARCH
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				id,
			</if>
			<if test="record.loadValue != null and record.loadValue != '' ">
				load_value,
			</if>
			<if test="record.searchText != null and record.searchText != '' ">
				search_text,
			</if>
			<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
				load_value_url,
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id,
			</if>
			<if test="record.searchType != null and record.searchType != '' ">
				search_type,
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders,
			</if>
			<if test="record.searchKey != null and record.searchKey != '' ">
				search_key,
			</if>
			<if test="record.searchState != null and record.searchState != '' ">
				search_state,
			</if>
			<if test="record.valueField != null and record.valueField != '' ">
				value_field,
			</if>
			<if test="record.textField != null and record.textField != '' ">
				text_field,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				#{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.loadValue != null and record.loadValue != '' ">
				#{record.loadValue,jdbcType=VARCHAR},
			</if>
			<if test="record.searchText != null and record.searchText != '' ">
				#{record.searchText,jdbcType=VARCHAR},
			</if>
			<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
				#{record.loadValueUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				#{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.searchType != null and record.searchType != '' ">
				#{record.searchType,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				#{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.searchKey != null and record.searchKey != '' ">
				#{record.searchKey,jdbcType=VARCHAR},
			</if>
			<if test="record.searchState != null and record.searchState != '' ">
				#{record.searchState,jdbcType=VARCHAR},
			</if>
			<if test="record.valueField != null and record.valueField != '' ">
				#{record.valueField,jdbcType=VARCHAR},
			</if>
			<if test="record.textField != null and record.textField != '' ">
				#{record.textField,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel">
		update R_MENU_SEARCH
		<set>
			<if test="record.loadValue != null and record.loadValue != '' ">
				load_value = #{record.loadValue,jdbcType=VARCHAR},
			</if>
			<if test="record.searchText != null and record.searchText != '' ">
				search_text = #{record.searchText,jdbcType=VARCHAR},
			</if>
			<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
				load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.searchType != null and record.searchType != '' ">
				search_type = #{record.searchType,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders = #{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.searchKey != null and record.searchKey != '' ">
				search_key = #{record.searchKey,jdbcType=VARCHAR},
			</if>
			<if test="record.searchState != null and record.searchState != '' ">
				search_state = #{record.searchState,jdbcType=VARCHAR},
			</if>
			<if test="record.valueField != null and record.valueField != '' ">
				value_field = #{record.valueField,jdbcType=VARCHAR},
			</if>
			<if test="record.textField != null and record.textField != '' ">
				text_field = #{record.textField,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel">
		update R_MENU_SEARCH
		set
		load_value = #{record.loadValue,jdbcType=VARCHAR}
		search_text = #{record.searchText,jdbcType=VARCHAR}
		load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		search_type = #{record.searchType,jdbcType=VARCHAR}
		orders = #{record.orders,jdbcType=VARCHAR}
		search_key = #{record.searchKey,jdbcType=VARCHAR}
		search_state = #{record.searchState,jdbcType=VARCHAR}
		value_field = #{record.valueField,jdbcType=VARCHAR}
		text_field = #{record.textField,jdbcType=VARCHAR}
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<select id="selectPageListByParameters" resultMap="BaseResultMap">
		select * from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			and load_value = #{record.loadValue,jdbcType=VARCHAR}
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			and search_text = #{record.searchText,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			and load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			and search_type = #{record.searchType,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			and search_key = #{record.searchKey,jdbcType=VARCHAR}
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			and search_state = #{record.searchState,jdbcType=VARCHAR}
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			and value_field = #{record.valueField,jdbcType=VARCHAR}
		</if>
		<if test="record.textField != null and record.textField != '' ">
			and text_field = #{record.textField,jdbcType=VARCHAR}
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParametersCount" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" resultType="java.lang.Integer">
		select count(*) from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			and load_value = #{record.loadValue,jdbcType=VARCHAR}
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			and search_text = #{record.searchText,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			and load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			and search_type = #{record.searchType,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			and search_key = #{record.searchKey,jdbcType=VARCHAR}
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			and search_state = #{record.searchState,jdbcType=VARCHAR}
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			and value_field = #{record.valueField,jdbcType=VARCHAR}
		</if>
		<if test="record.textField != null and record.textField != '' ">
			and text_field = #{record.textField,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectPageListByParameterRequire" resultMap="BaseResultMap">
		select * from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.id != null and require.greaterThan.id != '' ">
					and id > #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.id != null and require.lessThan.id != '' ">
					and id &lt; #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.id != null and require.greaterThanAndEquals.id != '' ">
					and id >= #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.id != null and require.lessThanAndEquals.id != '' ">
					and id &lt;= #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.id != null and require.notEquality.id != '' ">
					and id &lt;> #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.id != null and require.similar.id != '' ">
					and  INSTR(id ,#{record.id}) >0 
				</if>
			</if>
			<if test="require.allColom.id == null">
				and id = #{record.id , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.loadValue != null and require.greaterThan.loadValue != '' ">
					and load_value > #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.loadValue != null and require.lessThan.loadValue != '' ">
					and load_value &lt; #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.loadValue != null and require.greaterThanAndEquals.loadValue != '' ">
					and load_value >= #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.loadValue != null and require.lessThanAndEquals.loadValue != '' ">
					and load_value &lt;= #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.loadValue != null and require.notEquality.loadValue != '' ">
					and load_value &lt;> #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.loadValue != null and require.similar.loadValue != '' ">
					and  INSTR(load_value ,#{record.loadValue}) >0 
				</if>
			</if>
			<if test="require.allColom.loadValue == null">
				and load_value = #{record.loadValue , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchText != null and require.greaterThan.searchText != '' ">
					and search_text > #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchText != null and require.lessThan.searchText != '' ">
					and search_text &lt; #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchText != null and require.greaterThanAndEquals.searchText != '' ">
					and search_text >= #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchText != null and require.lessThanAndEquals.searchText != '' ">
					and search_text &lt;= #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchText != null and require.notEquality.searchText != '' ">
					and search_text &lt;> #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchText != null and require.similar.searchText != '' ">
					and  INSTR(search_text ,#{record.searchText}) >0 
				</if>
			</if>
			<if test="require.allColom.searchText == null">
				and search_text = #{record.searchText , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.loadValueUrl != null and require.greaterThan.loadValueUrl != '' ">
					and load_value_url > #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.loadValueUrl != null and require.lessThan.loadValueUrl != '' ">
					and load_value_url &lt; #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.loadValueUrl != null and require.greaterThanAndEquals.loadValueUrl != '' ">
					and load_value_url >= #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.loadValueUrl != null and require.lessThanAndEquals.loadValueUrl != '' ">
					and load_value_url &lt;= #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.loadValueUrl != null and require.notEquality.loadValueUrl != '' ">
					and load_value_url &lt;> #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.loadValueUrl != null and require.similar.loadValueUrl != '' ">
					and  INSTR(load_value_url ,#{record.loadValueUrl}) >0 
				</if>
			</if>
			<if test="require.allColom.loadValueUrl == null">
				and load_value_url = #{record.loadValueUrl , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.parentMenuId != null and require.greaterThan.parentMenuId != '' ">
					and parent_menu_id > #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.parentMenuId != null and require.lessThan.parentMenuId != '' ">
					and parent_menu_id &lt; #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.parentMenuId != null and require.greaterThanAndEquals.parentMenuId != '' ">
					and parent_menu_id >= #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.parentMenuId != null and require.lessThanAndEquals.parentMenuId != '' ">
					and parent_menu_id &lt;= #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.parentMenuId != null and require.notEquality.parentMenuId != '' ">
					and parent_menu_id &lt;> #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.parentMenuId != null and require.similar.parentMenuId != '' ">
					and  INSTR(parent_menu_id ,#{record.parentMenuId}) >0 
				</if>
			</if>
			<if test="require.allColom.parentMenuId == null">
				and parent_menu_id = #{record.parentMenuId , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchType != null and require.greaterThan.searchType != '' ">
					and search_type > #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchType != null and require.lessThan.searchType != '' ">
					and search_type &lt; #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchType != null and require.greaterThanAndEquals.searchType != '' ">
					and search_type >= #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchType != null and require.lessThanAndEquals.searchType != '' ">
					and search_type &lt;= #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchType != null and require.notEquality.searchType != '' ">
					and search_type &lt;> #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchType != null and require.similar.searchType != '' ">
					and  INSTR(search_type ,#{record.searchType}) >0 
				</if>
			</if>
			<if test="require.allColom.searchType == null">
				and search_type = #{record.searchType , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.orders != null and record.orders != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.orders != null and require.greaterThan.orders != '' ">
					and orders > #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.orders != null and require.lessThan.orders != '' ">
					and orders &lt; #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.orders != null and require.greaterThanAndEquals.orders != '' ">
					and orders >= #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.orders != null and require.lessThanAndEquals.orders != '' ">
					and orders &lt;= #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.orders != null and require.notEquality.orders != '' ">
					and orders &lt;> #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.orders != null and require.similar.orders != '' ">
					and  INSTR(orders ,#{record.orders}) >0 
				</if>
			</if>
			<if test="require.allColom.orders == null">
				and orders = #{record.orders , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchKey != null and require.greaterThan.searchKey != '' ">
					and search_key > #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchKey != null and require.lessThan.searchKey != '' ">
					and search_key &lt; #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchKey != null and require.greaterThanAndEquals.searchKey != '' ">
					and search_key >= #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchKey != null and require.lessThanAndEquals.searchKey != '' ">
					and search_key &lt;= #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchKey != null and require.notEquality.searchKey != '' ">
					and search_key &lt;> #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchKey != null and require.similar.searchKey != '' ">
					and  INSTR(search_key ,#{record.searchKey}) >0 
				</if>
			</if>
			<if test="require.allColom.searchKey == null">
				and search_key = #{record.searchKey , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchState != null and require.greaterThan.searchState != '' ">
					and search_state > #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchState != null and require.lessThan.searchState != '' ">
					and search_state &lt; #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchState != null and require.greaterThanAndEquals.searchState != '' ">
					and search_state >= #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchState != null and require.lessThanAndEquals.searchState != '' ">
					and search_state &lt;= #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchState != null and require.notEquality.searchState != '' ">
					and search_state &lt;> #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchState != null and require.similar.searchState != '' ">
					and  INSTR(search_state ,#{record.searchState}) >0 
				</if>
			</if>
			<if test="require.allColom.searchState == null">
				and search_state = #{record.searchState , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.valueField != null and require.greaterThan.valueField != '' ">
					and value_field > #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.valueField != null and require.lessThan.valueField != '' ">
					and value_field &lt; #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.valueField != null and require.greaterThanAndEquals.valueField != '' ">
					and value_field >= #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.valueField != null and require.lessThanAndEquals.valueField != '' ">
					and value_field &lt;= #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.valueField != null and require.notEquality.valueField != '' ">
					and value_field &lt;> #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.valueField != null and require.similar.valueField != '' ">
					and  INSTR(value_field ,#{record.valueField}) >0 
				</if>
			</if>
			<if test="require.allColom.valueField == null">
				and value_field = #{record.valueField , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.textField != null and record.textField != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.textField != null and require.greaterThan.textField != '' ">
					and text_field > #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.textField != null and require.lessThan.textField != '' ">
					and text_field &lt; #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.textField != null and require.greaterThanAndEquals.textField != '' ">
					and text_field >= #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.textField != null and require.lessThanAndEquals.textField != '' ">
					and text_field &lt;= #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.textField != null and require.notEquality.textField != '' ">
					and text_field &lt;> #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.textField != null and require.similar.textField != '' ">
					and  INSTR(text_field ,#{record.textField}) >0 
				</if>
			</if>
			<if test="require.allColom.textField == null">
				and text_field = #{record.textField , jdbcType=VARCHAR}
			</if>
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParameterRequireCount" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" resultType="java.lang.Integer">
		select count(*) from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.id != null and require.greaterThan.id != '' ">
					and id > #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.id != null and require.lessThan.id != '' ">
					and id &lt; #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.id != null and require.greaterThanAndEquals.id != '' ">
					and id >= #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.id != null and require.lessThanAndEquals.id != '' ">
					and id &lt;= #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.id != null and require.notEquality.id != '' ">
					and id &lt;> #{record.id , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.id != null and require.similar.id != '' ">
					and  INSTR(id ,#{record.id}) >0 
				</if>
			</if>
			<if test="require.allColom.id == null">
				and id = #{record.id , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.loadValue != null and require.greaterThan.loadValue != '' ">
					and load_value > #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.loadValue != null and require.lessThan.loadValue != '' ">
					and load_value &lt; #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.loadValue != null and require.greaterThanAndEquals.loadValue != '' ">
					and load_value >= #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.loadValue != null and require.lessThanAndEquals.loadValue != '' ">
					and load_value &lt;= #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.loadValue != null and require.notEquality.loadValue != '' ">
					and load_value &lt;> #{record.loadValue , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.loadValue != null and require.similar.loadValue != '' ">
					and  INSTR(load_value ,#{record.loadValue}) >0 
				</if>
			</if>
			<if test="require.allColom.loadValue == null">
				and load_value = #{record.loadValue , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchText != null and require.greaterThan.searchText != '' ">
					and search_text > #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchText != null and require.lessThan.searchText != '' ">
					and search_text &lt; #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchText != null and require.greaterThanAndEquals.searchText != '' ">
					and search_text >= #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchText != null and require.lessThanAndEquals.searchText != '' ">
					and search_text &lt;= #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchText != null and require.notEquality.searchText != '' ">
					and search_text &lt;> #{record.searchText , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchText != null and require.similar.searchText != '' ">
					and  INSTR(search_text ,#{record.searchText}) >0 
				</if>
			</if>
			<if test="require.allColom.searchText == null">
				and search_text = #{record.searchText , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.loadValueUrl != null and require.greaterThan.loadValueUrl != '' ">
					and load_value_url > #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.loadValueUrl != null and require.lessThan.loadValueUrl != '' ">
					and load_value_url &lt; #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.loadValueUrl != null and require.greaterThanAndEquals.loadValueUrl != '' ">
					and load_value_url >= #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.loadValueUrl != null and require.lessThanAndEquals.loadValueUrl != '' ">
					and load_value_url &lt;= #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.loadValueUrl != null and require.notEquality.loadValueUrl != '' ">
					and load_value_url &lt;> #{record.loadValueUrl , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.loadValueUrl != null and require.similar.loadValueUrl != '' ">
					and  INSTR(load_value_url ,#{record.loadValueUrl}) >0 
				</if>
			</if>
			<if test="require.allColom.loadValueUrl == null">
				and load_value_url = #{record.loadValueUrl , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.parentMenuId != null and require.greaterThan.parentMenuId != '' ">
					and parent_menu_id > #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.parentMenuId != null and require.lessThan.parentMenuId != '' ">
					and parent_menu_id &lt; #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.parentMenuId != null and require.greaterThanAndEquals.parentMenuId != '' ">
					and parent_menu_id >= #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.parentMenuId != null and require.lessThanAndEquals.parentMenuId != '' ">
					and parent_menu_id &lt;= #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.parentMenuId != null and require.notEquality.parentMenuId != '' ">
					and parent_menu_id &lt;> #{record.parentMenuId , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.parentMenuId != null and require.similar.parentMenuId != '' ">
					and  INSTR(parent_menu_id ,#{record.parentMenuId}) >0 
				</if>
			</if>
			<if test="require.allColom.parentMenuId == null">
				and parent_menu_id = #{record.parentMenuId , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchType != null and require.greaterThan.searchType != '' ">
					and search_type > #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchType != null and require.lessThan.searchType != '' ">
					and search_type &lt; #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchType != null and require.greaterThanAndEquals.searchType != '' ">
					and search_type >= #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchType != null and require.lessThanAndEquals.searchType != '' ">
					and search_type &lt;= #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchType != null and require.notEquality.searchType != '' ">
					and search_type &lt;> #{record.searchType , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchType != null and require.similar.searchType != '' ">
					and  INSTR(search_type ,#{record.searchType}) >0 
				</if>
			</if>
			<if test="require.allColom.searchType == null">
				and search_type = #{record.searchType , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.orders != null and record.orders != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.orders != null and require.greaterThan.orders != '' ">
					and orders > #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.orders != null and require.lessThan.orders != '' ">
					and orders &lt; #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.orders != null and require.greaterThanAndEquals.orders != '' ">
					and orders >= #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.orders != null and require.lessThanAndEquals.orders != '' ">
					and orders &lt;= #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.orders != null and require.notEquality.orders != '' ">
					and orders &lt;> #{record.orders , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.orders != null and require.similar.orders != '' ">
					and  INSTR(orders ,#{record.orders}) >0 
				</if>
			</if>
			<if test="require.allColom.orders == null">
				and orders = #{record.orders , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchKey != null and require.greaterThan.searchKey != '' ">
					and search_key > #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchKey != null and require.lessThan.searchKey != '' ">
					and search_key &lt; #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchKey != null and require.greaterThanAndEquals.searchKey != '' ">
					and search_key >= #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchKey != null and require.lessThanAndEquals.searchKey != '' ">
					and search_key &lt;= #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchKey != null and require.notEquality.searchKey != '' ">
					and search_key &lt;> #{record.searchKey , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchKey != null and require.similar.searchKey != '' ">
					and  INSTR(search_key ,#{record.searchKey}) >0 
				</if>
			</if>
			<if test="require.allColom.searchKey == null">
				and search_key = #{record.searchKey , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.searchState != null and require.greaterThan.searchState != '' ">
					and search_state > #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.searchState != null and require.lessThan.searchState != '' ">
					and search_state &lt; #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.searchState != null and require.greaterThanAndEquals.searchState != '' ">
					and search_state >= #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.searchState != null and require.lessThanAndEquals.searchState != '' ">
					and search_state &lt;= #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.searchState != null and require.notEquality.searchState != '' ">
					and search_state &lt;> #{record.searchState , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.searchState != null and require.similar.searchState != '' ">
					and  INSTR(search_state ,#{record.searchState}) >0 
				</if>
			</if>
			<if test="require.allColom.searchState == null">
				and search_state = #{record.searchState , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.valueField != null and require.greaterThan.valueField != '' ">
					and value_field > #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.valueField != null and require.lessThan.valueField != '' ">
					and value_field &lt; #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.valueField != null and require.greaterThanAndEquals.valueField != '' ">
					and value_field >= #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.valueField != null and require.lessThanAndEquals.valueField != '' ">
					and value_field &lt;= #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.valueField != null and require.notEquality.valueField != '' ">
					and value_field &lt;> #{record.valueField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.valueField != null and require.similar.valueField != '' ">
					and  INSTR(value_field ,#{record.valueField}) >0 
				</if>
			</if>
			<if test="require.allColom.valueField == null">
				and value_field = #{record.valueField , jdbcType=VARCHAR}
			</if>
		</if>
		<if test="record.textField != null and record.textField != '' ">
			<if test="require.greaterThan != null">
				<if test="require.greaterThan.textField != null and require.greaterThan.textField != '' ">
					and text_field > #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThan != null">
				<if test="require.lessThan.textField != null and require.lessThan.textField != '' ">
					and text_field &lt; #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.greaterThanAndEquals != null">
				<if test="require.greaterThanAndEquals.textField != null and require.greaterThanAndEquals.textField != '' ">
					and text_field >= #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.lessThanAndEquals != null">
				<if
					test="require.lessThanAndEquals.textField != null and require.lessThanAndEquals.textField != '' ">
					and text_field &lt;= #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.notEquality != null">
				<if test="require.notEquality.textField != null and require.notEquality.textField != '' ">
					and text_field &lt;> #{record.textField , jdbcType=VARCHAR}
				</if>
			</if>
			<if test="require.similar != null">
				<if test="require.similar.textField != null and require.similar.textField != '' ">
					and  INSTR(text_field ,#{record.textField}) >0 
				</if>
			</if>
			<if test="require.allColom.textField == null">
				and text_field = #{record.textField , jdbcType=VARCHAR}
			</if>
		</if>
	</select>
	<insert id="batchCreate" parameterType="java.util.List">
		insert into R_MENU_SEARCH (
		id,load_value,search_text,load_value_url,parent_menu_id,search_type,orders,search_key,search_state,value_field,text_field
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.loadValue,jdbcType=VARCHAR},
			#{item.searchText,jdbcType=VARCHAR},
			#{item.loadValueUrl,jdbcType=VARCHAR},
			#{item.parentMenuId,jdbcType=VARCHAR},
			#{item.searchType,jdbcType=VARCHAR},
			#{item.orders,jdbcType=VARCHAR},
			#{item.searchKey,jdbcType=VARCHAR},
			#{item.searchState,jdbcType=VARCHAR},
			#{item.valueField,jdbcType=VARCHAR},
			#{item.textField,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteByParames" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel">
		delete from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			and load_value = #{record.loadValue,jdbcType=VARCHAR}
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			and search_text = #{record.searchText,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			and load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			and search_type = #{record.searchType,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			and search_key = #{record.searchKey,jdbcType=VARCHAR}
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			and search_state = #{record.searchState,jdbcType=VARCHAR}
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			and value_field = #{record.valueField,jdbcType=VARCHAR}
		</if>
		<if test="record.textField != null and record.textField != '' ">
			and text_field = #{record.textField,jdbcType=VARCHAR}
		</if>
	</delete>
</mapper>