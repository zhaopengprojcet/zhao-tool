<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zhao.common.pojo.dao.ZmenuSearchModelMapper" >
	<resultMap id="BaseResultMap" type="org.zhao.common.pojo.model.ZmenuSearchModel" >
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="load_value" property="loadValue" jdbcType="VARCHAR" />
		<result column="search_text" property="searchText" jdbcType="VARCHAR" />
		<result column="load_value_url" property="loadValueUrl" jdbcType="VARCHAR" />
		<result column="parent_menu_id" property="parentMenuId" jdbcType="VARCHAR" />
		<result column="search_type" property="searchType" jdbcType="VARCHAR" />
		<result column="orders" property="orders" jdbcType="VARCHAR" />
		<result column="search_key" property="searchKey" jdbcType="VARCHAR" />
		<result column="search_state" property="searchState" jdbcType="VARCHAR" />
		<result column="value_field" property="valueField" jdbcType="VARCHAR" />
		<result column="text_field" property="textField" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,load_value,search_text,load_value_url,parent_menu_id,search_type,orders,search_key,search_state,value_field,text_field
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from R_MENU_SEARCH
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from R_MENU_SEARCH
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU_SEARCH (id,load_value,search_text,load_value_url,parent_menu_id,search_type,orders,search_key,search_state,value_field,text_field)
		values (
			#{record.id,jdbcType=VARCHAR},
			#{record.loadValue,jdbcType=VARCHAR},
			#{record.searchText,jdbcType=VARCHAR},
			#{record.loadValueUrl,jdbcType=VARCHAR},
			#{record.parentMenuId,jdbcType=VARCHAR},
			#{record.searchType,jdbcType=VARCHAR},
			#{record.orders,jdbcType=VARCHAR},
			#{record.searchKey,jdbcType=VARCHAR},
			#{record.searchState,jdbcType=VARCHAR},
			#{record.valueField,jdbcType=VARCHAR},
			#{record.textField,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" useGeneratedKeys="true" keyProperty="id">
		insert into R_MENU_SEARCH
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				id,
			</if>
			<if test="record.loadValue != null and record.loadValue != '' ">
				load_value,
			</if>
			<if test="record.searchText != null and record.searchText != '' ">
				search_text,
			</if>
			<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
				load_value_url,
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id,
			</if>
			<if test="record.searchType != null and record.searchType != '' ">
				search_type,
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders,
			</if>
			<if test="record.searchKey != null and record.searchKey != '' ">
				search_key,
			</if>
			<if test="record.searchState != null and record.searchState != '' ">
				search_state,
			</if>
			<if test="record.valueField != null and record.valueField != '' ">
				value_field,
			</if>
			<if test="record.textField != null and record.textField != '' ">
				text_field,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.id != null and record.id != '' ">
				#{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.loadValue != null and record.loadValue != '' ">
				#{record.loadValue,jdbcType=VARCHAR},
			</if>
			<if test="record.searchText != null and record.searchText != '' ">
				#{record.searchText,jdbcType=VARCHAR},
			</if>
			<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
				#{record.loadValueUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				#{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.searchType != null and record.searchType != '' ">
				#{record.searchType,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				#{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.searchKey != null and record.searchKey != '' ">
				#{record.searchKey,jdbcType=VARCHAR},
			</if>
			<if test="record.searchState != null and record.searchState != '' ">
				#{record.searchState,jdbcType=VARCHAR},
			</if>
			<if test="record.valueField != null and record.valueField != '' ">
				#{record.valueField,jdbcType=VARCHAR},
			</if>
			<if test="record.textField != null and record.textField != '' ">
				#{record.textField,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel">
		update R_MENU_SEARCH
		<set>
			<if test="record.loadValue != null and record.loadValue != '' ">
				load_value = #{record.loadValue,jdbcType=VARCHAR},
			</if>
			<if test="record.searchText != null and record.searchText != '' ">
				search_text = #{record.searchText,jdbcType=VARCHAR},
			</if>
			<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
				load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR},
			</if>
			<if test="record.parentMenuId != null and record.parentMenuId != '' ">
				parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR},
			</if>
			<if test="record.searchType != null and record.searchType != '' ">
				search_type = #{record.searchType,jdbcType=VARCHAR},
			</if>
			<if test="record.orders != null and record.orders != '' ">
				orders = #{record.orders,jdbcType=VARCHAR},
			</if>
			<if test="record.searchKey != null and record.searchKey != '' ">
				search_key = #{record.searchKey,jdbcType=VARCHAR},
			</if>
			<if test="record.searchState != null and record.searchState != '' ">
				search_state = #{record.searchState,jdbcType=VARCHAR},
			</if>
			<if test="record.valueField != null and record.valueField != '' ">
				value_field = #{record.valueField,jdbcType=VARCHAR},
			</if>
			<if test="record.textField != null and record.textField != '' ">
				text_field = #{record.textField,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel">
		update R_MENU_SEARCH
		set
		load_value = #{record.loadValue,jdbcType=VARCHAR}
		search_text = #{record.searchText,jdbcType=VARCHAR}
		load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		search_type = #{record.searchType,jdbcType=VARCHAR}
		orders = #{record.orders,jdbcType=VARCHAR}
		search_key = #{record.searchKey,jdbcType=VARCHAR}
		search_state = #{record.searchState,jdbcType=VARCHAR}
		value_field = #{record.valueField,jdbcType=VARCHAR}
		text_field = #{record.textField,jdbcType=VARCHAR}
		where id = #{record.id,jdbcType=VARCHAR}
	</update>
	<select id="selectPageListByParameters" resultMap="BaseResultMap">
		select * from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			and load_value = #{record.loadValue,jdbcType=VARCHAR}
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			and search_text = #{record.searchText,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			and load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			and search_type = #{record.searchType,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			and search_key = #{record.searchKey,jdbcType=VARCHAR}
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			and search_state = #{record.searchState,jdbcType=VARCHAR}
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			and value_field = #{record.valueField,jdbcType=VARCHAR}
		</if>
		<if test="record.textField != null and record.textField != '' ">
			and text_field = #{record.textField,jdbcType=VARCHAR}
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParametersCount" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" resultType="java.lang.Integer">
		select count(*) from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			and load_value = #{record.loadValue,jdbcType=VARCHAR}
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			and search_text = #{record.searchText,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			and load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			and search_type = #{record.searchType,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			and search_key = #{record.searchKey,jdbcType=VARCHAR}
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			and search_state = #{record.searchState,jdbcType=VARCHAR}
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			and value_field = #{record.valueField,jdbcType=VARCHAR}
		</if>
		<if test="record.textField != null and record.textField != '' ">
			and text_field = #{record.textField,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectPageListByParameterRequire" resultMap="BaseResultMap">
		select * from R_MENU_SEARCH where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.loadValue != null">
			<if test="require.loadValue.greaterThan != null">
					and load_value > #{require.loadValue.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.lessThan != null">
					and load_value &lt; #{require.loadValue.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.greaterThanAndEquals != null">
					and load_value >= #{require.loadValue.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.lessThanAndEquals != null">
					and load_value &lt;= #{require.loadValue.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.notEquality != null">
					and load_value &lt;> #{require.loadValue.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.equality != null">
					and load_value = #{require.loadValue.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.similar != null">
					and INSTR(load_value, #{require.loadValue.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchText != null">
			<if test="require.searchText.greaterThan != null">
					and search_text > #{require.searchText.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.lessThan != null">
					and search_text &lt; #{require.searchText.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.greaterThanAndEquals != null">
					and search_text >= #{require.searchText.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.lessThanAndEquals != null">
					and search_text &lt;= #{require.searchText.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.notEquality != null">
					and search_text &lt;> #{require.searchText.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.equality != null">
					and search_text = #{require.searchText.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.similar != null">
					and INSTR(search_text, #{require.searchText.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.loadValueUrl != null">
			<if test="require.loadValueUrl.greaterThan != null">
					and load_value_url > #{require.loadValueUrl.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.lessThan != null">
					and load_value_url &lt; #{require.loadValueUrl.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.greaterThanAndEquals != null">
					and load_value_url >= #{require.loadValueUrl.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.lessThanAndEquals != null">
					and load_value_url &lt;= #{require.loadValueUrl.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.notEquality != null">
					and load_value_url &lt;> #{require.loadValueUrl.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.equality != null">
					and load_value_url = #{require.loadValueUrl.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.similar != null">
					and INSTR(load_value_url, #{require.loadValueUrl.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.parentMenuId != null">
			<if test="require.parentMenuId.greaterThan != null">
					and parent_menu_id > #{require.parentMenuId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThan != null">
					and parent_menu_id &lt; #{require.parentMenuId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.greaterThanAndEquals != null">
					and parent_menu_id >= #{require.parentMenuId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThanAndEquals != null">
					and parent_menu_id &lt;= #{require.parentMenuId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.notEquality != null">
					and parent_menu_id &lt;> #{require.parentMenuId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.equality != null">
					and parent_menu_id = #{require.parentMenuId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.similar != null">
					and INSTR(parent_menu_id, #{require.parentMenuId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchType != null">
			<if test="require.searchType.greaterThan != null">
					and search_type > #{require.searchType.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.lessThan != null">
					and search_type &lt; #{require.searchType.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.greaterThanAndEquals != null">
					and search_type >= #{require.searchType.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.lessThanAndEquals != null">
					and search_type &lt;= #{require.searchType.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.notEquality != null">
					and search_type &lt;> #{require.searchType.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.equality != null">
					and search_type = #{require.searchType.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.similar != null">
					and INSTR(search_type, #{require.searchType.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.orders != null">
			<if test="require.orders.greaterThan != null">
					and orders > #{require.orders.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThan != null">
					and orders &lt; #{require.orders.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.greaterThanAndEquals != null">
					and orders >= #{require.orders.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThanAndEquals != null">
					and orders &lt;= #{require.orders.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.notEquality != null">
					and orders &lt;> #{require.orders.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.equality != null">
					and orders = #{require.orders.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.similar != null">
					and INSTR(orders, #{require.orders.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchKey != null">
			<if test="require.searchKey.greaterThan != null">
					and search_key > #{require.searchKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.lessThan != null">
					and search_key &lt; #{require.searchKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.greaterThanAndEquals != null">
					and search_key >= #{require.searchKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.lessThanAndEquals != null">
					and search_key &lt;= #{require.searchKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.notEquality != null">
					and search_key &lt;> #{require.searchKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.equality != null">
					and search_key = #{require.searchKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.similar != null">
					and INSTR(search_key, #{require.searchKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchState != null">
			<if test="require.searchState.greaterThan != null">
					and search_state > #{require.searchState.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.lessThan != null">
					and search_state &lt; #{require.searchState.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.greaterThanAndEquals != null">
					and search_state >= #{require.searchState.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.lessThanAndEquals != null">
					and search_state &lt;= #{require.searchState.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.notEquality != null">
					and search_state &lt;> #{require.searchState.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.equality != null">
					and search_state = #{require.searchState.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.similar != null">
					and INSTR(search_state, #{require.searchState.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.valueField != null">
			<if test="require.valueField.greaterThan != null">
					and value_field > #{require.valueField.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.lessThan != null">
					and value_field &lt; #{require.valueField.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.greaterThanAndEquals != null">
					and value_field >= #{require.valueField.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.lessThanAndEquals != null">
					and value_field &lt;= #{require.valueField.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.notEquality != null">
					and value_field &lt;> #{require.valueField.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.equality != null">
					and value_field = #{require.valueField.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.similar != null">
					and INSTR(value_field, #{require.valueField.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.textField != null">
			<if test="require.textField.greaterThan != null">
					and text_field > #{require.textField.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.lessThan != null">
					and text_field &lt; #{require.textField.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.greaterThanAndEquals != null">
					and text_field >= #{require.textField.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.lessThanAndEquals != null">
					and text_field &lt;= #{require.textField.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.notEquality != null">
					and text_field &lt;> #{require.textField.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.equality != null">
					and text_field = #{require.textField.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.similar != null">
					and INSTR(text_field, #{require.textField.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test=" page != null ">
			<if test=" page.order != null  and page.order != '' ">
				order by ${page.order } ${page.orderBy}
			</if>
			<if test=" page.start  != null  and page.count  != null ">
				limit #{page.start } , #{page.count }
			</if>
		</if>
	</select>
	<select id="selectPageListByParameterRequireCount" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel" resultType="java.lang.Integer">
		select count(*) from R_MENU_SEARCH where 1 = 1
		<if test="require.id != null">
			<if test="require.id.greaterThan != null">
					and id > #{require.id.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThan != null">
					and id &lt; #{require.id.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.greaterThanAndEquals != null">
					and id >= #{require.id.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.lessThanAndEquals != null">
					and id &lt;= #{require.id.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.notEquality != null">
					and id &lt;> #{require.id.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.equality != null">
					and id = #{require.id.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.id.similar != null">
					and INSTR(id, #{require.id.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.loadValue != null">
			<if test="require.loadValue.greaterThan != null">
					and load_value > #{require.loadValue.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.lessThan != null">
					and load_value &lt; #{require.loadValue.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.greaterThanAndEquals != null">
					and load_value >= #{require.loadValue.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.lessThanAndEquals != null">
					and load_value &lt;= #{require.loadValue.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.notEquality != null">
					and load_value &lt;> #{require.loadValue.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.equality != null">
					and load_value = #{require.loadValue.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValue.similar != null">
					and INSTR(load_value, #{require.loadValue.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchText != null">
			<if test="require.searchText.greaterThan != null">
					and search_text > #{require.searchText.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.lessThan != null">
					and search_text &lt; #{require.searchText.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.greaterThanAndEquals != null">
					and search_text >= #{require.searchText.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.lessThanAndEquals != null">
					and search_text &lt;= #{require.searchText.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.notEquality != null">
					and search_text &lt;> #{require.searchText.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.equality != null">
					and search_text = #{require.searchText.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchText.similar != null">
					and INSTR(search_text, #{require.searchText.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.loadValueUrl != null">
			<if test="require.loadValueUrl.greaterThan != null">
					and load_value_url > #{require.loadValueUrl.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.lessThan != null">
					and load_value_url &lt; #{require.loadValueUrl.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.greaterThanAndEquals != null">
					and load_value_url >= #{require.loadValueUrl.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.lessThanAndEquals != null">
					and load_value_url &lt;= #{require.loadValueUrl.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.notEquality != null">
					and load_value_url &lt;> #{require.loadValueUrl.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.equality != null">
					and load_value_url = #{require.loadValueUrl.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.loadValueUrl.similar != null">
					and INSTR(load_value_url, #{require.loadValueUrl.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.parentMenuId != null">
			<if test="require.parentMenuId.greaterThan != null">
					and parent_menu_id > #{require.parentMenuId.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThan != null">
					and parent_menu_id &lt; #{require.parentMenuId.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.greaterThanAndEquals != null">
					and parent_menu_id >= #{require.parentMenuId.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.lessThanAndEquals != null">
					and parent_menu_id &lt;= #{require.parentMenuId.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.notEquality != null">
					and parent_menu_id &lt;> #{require.parentMenuId.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.equality != null">
					and parent_menu_id = #{require.parentMenuId.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.parentMenuId.similar != null">
					and INSTR(parent_menu_id, #{require.parentMenuId.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchType != null">
			<if test="require.searchType.greaterThan != null">
					and search_type > #{require.searchType.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.lessThan != null">
					and search_type &lt; #{require.searchType.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.greaterThanAndEquals != null">
					and search_type >= #{require.searchType.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.lessThanAndEquals != null">
					and search_type &lt;= #{require.searchType.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.notEquality != null">
					and search_type &lt;> #{require.searchType.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.equality != null">
					and search_type = #{require.searchType.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchType.similar != null">
					and INSTR(search_type, #{require.searchType.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.orders != null">
			<if test="require.orders.greaterThan != null">
					and orders > #{require.orders.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThan != null">
					and orders &lt; #{require.orders.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.greaterThanAndEquals != null">
					and orders >= #{require.orders.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.lessThanAndEquals != null">
					and orders &lt;= #{require.orders.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.notEquality != null">
					and orders &lt;> #{require.orders.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.equality != null">
					and orders = #{require.orders.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.orders.similar != null">
					and INSTR(orders, #{require.orders.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchKey != null">
			<if test="require.searchKey.greaterThan != null">
					and search_key > #{require.searchKey.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.lessThan != null">
					and search_key &lt; #{require.searchKey.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.greaterThanAndEquals != null">
					and search_key >= #{require.searchKey.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.lessThanAndEquals != null">
					and search_key &lt;= #{require.searchKey.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.notEquality != null">
					and search_key &lt;> #{require.searchKey.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.equality != null">
					and search_key = #{require.searchKey.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchKey.similar != null">
					and INSTR(search_key, #{require.searchKey.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.searchState != null">
			<if test="require.searchState.greaterThan != null">
					and search_state > #{require.searchState.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.lessThan != null">
					and search_state &lt; #{require.searchState.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.greaterThanAndEquals != null">
					and search_state >= #{require.searchState.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.lessThanAndEquals != null">
					and search_state &lt;= #{require.searchState.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.notEquality != null">
					and search_state &lt;> #{require.searchState.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.equality != null">
					and search_state = #{require.searchState.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.searchState.similar != null">
					and INSTR(search_state, #{require.searchState.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.valueField != null">
			<if test="require.valueField.greaterThan != null">
					and value_field > #{require.valueField.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.lessThan != null">
					and value_field &lt; #{require.valueField.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.greaterThanAndEquals != null">
					and value_field >= #{require.valueField.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.lessThanAndEquals != null">
					and value_field &lt;= #{require.valueField.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.notEquality != null">
					and value_field &lt;> #{require.valueField.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.equality != null">
					and value_field = #{require.valueField.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.valueField.similar != null">
					and INSTR(value_field, #{require.valueField.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
		<if test="require.textField != null">
			<if test="require.textField.greaterThan != null">
					and text_field > #{require.textField.greaterThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.lessThan != null">
					and text_field &lt; #{require.textField.lessThan , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.greaterThanAndEquals != null">
					and text_field >= #{require.textField.greaterThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.lessThanAndEquals != null">
					and text_field &lt;= #{require.textField.lessThanAndEquals , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.notEquality != null">
					and text_field &lt;> #{require.textField.notEquality , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.equality != null">
					and text_field = #{require.textField.equality , jdbcType=VARCHAR }
		    </if>
			<if test="require.textField.similar != null">
					and INSTR(text_field, #{require.textField.similar , jdbcType=VARCHAR }) >0 
		    </if>
		</if>
	</select>
	<insert id="batchCreate" parameterType="java.util.List">
		insert into R_MENU_SEARCH (
		id,load_value,search_text,load_value_url,parent_menu_id,search_type,orders,search_key,search_state,value_field,text_field
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.loadValue,jdbcType=VARCHAR},
			#{item.searchText,jdbcType=VARCHAR},
			#{item.loadValueUrl,jdbcType=VARCHAR},
			#{item.parentMenuId,jdbcType=VARCHAR},
			#{item.searchType,jdbcType=VARCHAR},
			#{item.orders,jdbcType=VARCHAR},
			#{item.searchKey,jdbcType=VARCHAR},
			#{item.searchState,jdbcType=VARCHAR},
			#{item.valueField,jdbcType=VARCHAR},
			#{item.textField,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<delete id="deleteByParames" parameterType="org.zhao.common.pojo.model.ZmenuSearchModel">
		delete from R_MENU_SEARCH where 1 = 1
		<if test="record.id != null and record.id != '' ">
			and id = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValue != null and record.loadValue != '' ">
			and load_value = #{record.loadValue,jdbcType=VARCHAR}
		</if>
		<if test="record.searchText != null and record.searchText != '' ">
			and search_text = #{record.searchText,jdbcType=VARCHAR}
		</if>
		<if test="record.loadValueUrl != null and record.loadValueUrl != '' ">
			and load_value_url = #{record.loadValueUrl,jdbcType=VARCHAR}
		</if>
		<if test="record.parentMenuId != null and record.parentMenuId != '' ">
			and parent_menu_id = #{record.parentMenuId,jdbcType=VARCHAR}
		</if>
		<if test="record.searchType != null and record.searchType != '' ">
			and search_type = #{record.searchType,jdbcType=VARCHAR}
		</if>
		<if test="record.orders != null and record.orders != '' ">
			and orders = #{record.orders,jdbcType=VARCHAR}
		</if>
		<if test="record.searchKey != null and record.searchKey != '' ">
			and search_key = #{record.searchKey,jdbcType=VARCHAR}
		</if>
		<if test="record.searchState != null and record.searchState != '' ">
			and search_state = #{record.searchState,jdbcType=VARCHAR}
		</if>
		<if test="record.valueField != null and record.valueField != '' ">
			and value_field = #{record.valueField,jdbcType=VARCHAR}
		</if>
		<if test="record.textField != null and record.textField != '' ">
			and text_field = #{record.textField,jdbcType=VARCHAR}
		</if>
	</delete>
</mapper>